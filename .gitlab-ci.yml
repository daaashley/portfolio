include:
- template: Terraform/Base.gitlab-ci.yml    # https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Terraform/Base.gitlab-ci.yml
- template: Jobs/SAST-IaC.gitlab-ci.yml     # https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Jobs/SAST-IaC.gitlab-ci.yml

stages:
- validate
- test
- pytest
- build
- deploy
- cleanup

fmt:
  extends: .terraform:fmt
  needs: []

validate:
  extends: .terraform:validate
  needs: []

build:
  extends: .terraform:build

deploy:
  extends: .terraform:deploy
  dependencies:
  - build
  environment:
    name: $TF_STATE_NAME




# Test template
.test-template:
  stage: pytest
  image: python:3.9.6-slim-buster
  except:
  - tags
  before_script:
  - apt-get update
  - apt-get -y install libpq-dev python3-dev curl build-essential procps unzip libffi-dev gcc postgresql postgresql-client
  - pip install poetry==1.2.2
  - poetry config virtualenvs.create false
  - poetry install

black:
  extends:
  - .test-template
  script:
  - black --check .


pytest:
  extends:
  - .test-template
  services:
  - name: postgres:13.8-bullseye
    alias: database
  variables:
    # Postgresql variables
    BACKEND_DB_HOST: "postgresql://postgres:postgres@db:5432/postgres"
    POSTGRES_PASSWORD: postgres
    POSTGRES_USER: postgres
    POSTGRES_DB: postgres
  script:
  - apt update
  - apt install -y wait-for-it
  - psql -U "$POSTGRES_USER" -p 5432 -h postgres
  - wait-for-it -t 180 $BACKEND_DB_HOST:5432
  - pytest -vv --junitxml=report.xml --cov="backend" .
  - coverage xml
  artifacts:
    when: always
    reports:
      junit: report.xml
